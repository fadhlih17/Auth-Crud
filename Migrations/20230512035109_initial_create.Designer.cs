// <auto-generated />
using System;
using Auth_Crud.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Auth_Crud.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230512035109_initial_create")]
    partial class initial_create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Auth_Crud.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("Varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("m_admin");
                });

            modelBuilder.Entity("Auth_Crud.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DeleteAdminId")
                        .HasColumnType("int")
                        .HasColumnName("delete_admin");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("delete_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("EntryAdminId")
                        .HasColumnType("int")
                        .HasColumnName("entry_admin");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("entry_date");

                    b.Property<int?>("LastAdminId")
                        .HasColumnType("int")
                        .HasColumnName("last_admin");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DeleteAdminId");

                    b.HasIndex("EntryAdminId");

                    b.HasIndex("LastAdminId");

                    b.ToTable("m_product");
                });

            modelBuilder.Entity("Auth_Crud.Entities.Transactional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("Varchar(10)")
                        .HasColumnName("action");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("action_date");

                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("admin");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("ProductId");

                    b.ToTable("t_transactional");
                });

            modelBuilder.Entity("Auth_Crud.Entities.Product", b =>
                {
                    b.HasOne("Auth_Crud.Entities.Admin", "DeleteAdmin")
                        .WithMany()
                        .HasForeignKey("DeleteAdminId");

                    b.HasOne("Auth_Crud.Entities.Admin", "EntryAdmin")
                        .WithMany()
                        .HasForeignKey("EntryAdminId");

                    b.HasOne("Auth_Crud.Entities.Admin", "LastAdmin")
                        .WithMany()
                        .HasForeignKey("LastAdminId");

                    b.Navigation("DeleteAdmin");

                    b.Navigation("EntryAdmin");

                    b.Navigation("LastAdmin");
                });

            modelBuilder.Entity("Auth_Crud.Entities.Transactional", b =>
                {
                    b.HasOne("Auth_Crud.Entities.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Auth_Crud.Entities.Product", "Product")
                        .WithMany("Transactionals")
                        .HasForeignKey("ProductId");

                    b.Navigation("Admin");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Auth_Crud.Entities.Product", b =>
                {
                    b.Navigation("Transactionals");
                });
#pragma warning restore 612, 618
        }
    }
}
